{"ast":null,"code":"import _slicedToArray from\"C:/Users/keego/Documents/repos/memory-snap/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useReducer}from'react';import{PhotosContext}from'contexts/photos';import{baseState}from'contexts';import{photosReducer}from'contexts/photos/reducer';import useFetchedPhotos from'hooks/useFetchedPhotos';import{setPhotos}from'contexts/photos/actions';import{jsx as _jsx}from\"react/jsx-runtime\";var PhotosProvider=function PhotosProvider(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},children=_ref.children,_ref$providedState=_ref.providedState,providedState=_ref$providedState===void 0?null:_ref$providedState;var initialState=providedState||baseState.photos;var _useReducer=useReducer(photosReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// TODO: add 'loading' value to indicate if the photos have loaded from the api\nvar _useFetchedPhotos=useFetchedPhotos({query:'cats',perPage:5}),photos=_useFetchedPhotos.photos;useEffect(function(){if(!photos)return;dispatch(setPhotos(photos));},[photos]);return/*#__PURE__*/_jsx(PhotosContext.Provider,{value:{state:state,dispatch:dispatch},children:children});};export default PhotosProvider;","map":{"version":3,"names":["React","useEffect","useReducer","PhotosContext","baseState","photosReducer","useFetchedPhotos","setPhotos","jsx","_jsx","PhotosProvider","_ref","arguments","length","undefined","children","_ref$providedState","providedState","initialState","photos","_useReducer","_useReducer2","_slicedToArray","state","dispatch","_useFetchedPhotos","query","perPage","Provider","value"],"sources":["C:/Users/keego/Documents/repos/memory-snap/packages/frontend/src/components/providers/photos/index.jsx"],"sourcesContent":["import React, { useEffect, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { PhotosContext } from 'contexts/photos';\r\nimport { baseState } from 'contexts';\r\nimport { photosReducer } from 'contexts/photos/reducer';\r\nimport useFetchedPhotos from 'hooks/useFetchedPhotos';\r\nimport { setPhotos } from 'contexts/photos/actions';\r\n\r\nconst PhotosProvider = ({ children, providedState = null } = {}) => {\r\n  const initialState = providedState || baseState.photos;\r\n  const [state, dispatch] = useReducer(photosReducer, initialState);\r\n\r\n  // TODO: add 'loading' value to indicate if the photos have loaded from the api\r\n  const { photos } = useFetchedPhotos({ query: 'cats', perPage: 5 });\r\n\r\n  useEffect(() => {\r\n    if (!photos) return;\r\n\r\n    dispatch(setPhotos(photos));\r\n  }, [photos]);\r\n\r\n  return (\r\n    <PhotosContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </PhotosContext.Provider>\r\n  );\r\n};\r\n\r\nPhotosProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  providedState: PropTypes.object,\r\n};\r\n\r\nexport default PhotosProvider;\r\n"],"mappings":"gIAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAEpD,OAASC,aAAa,KAAQ,iBAAiB,CAC/C,OAASC,SAAS,KAAQ,UAAU,CACpC,OAASC,aAAa,KAAQ,yBAAyB,CACvD,MAAO,CAAAC,gBAAgB,KAAM,wBAAwB,CACrD,OAASC,SAAS,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAgD,KAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAP,CAAC,CAAC,CAArCG,QAAQ,CAAAJ,IAAA,CAARI,QAAQ,CAAAC,kBAAA,CAAAL,IAAA,CAAEM,aAAa,CAAbA,aAAa,CAAAD,kBAAA,UAAG,IAAI,CAAAA,kBAAA,CACtD,GAAM,CAAAE,YAAY,CAAGD,aAAa,EAAIb,SAAS,CAACe,MAAM,CACtD,IAAAC,WAAA,CAA0BlB,UAAU,CAACG,aAAa,CAAEa,YAAY,CAAC,CAAAG,YAAA,CAAAC,cAAA,CAAAF,WAAA,IAA1DG,KAAK,CAAAF,YAAA,IAAEG,QAAQ,CAAAH,YAAA,IAEtB;AACA,IAAAI,iBAAA,CAAmBnB,gBAAgB,CAAC,CAAEoB,KAAK,CAAE,MAAM,CAAEC,OAAO,CAAE,CAAE,CAAC,CAAC,CAA1DR,MAAM,CAAAM,iBAAA,CAANN,MAAM,CAEdlB,SAAS,CAAC,UAAM,CACd,GAAI,CAACkB,MAAM,CAAE,OAEbK,QAAQ,CAACjB,SAAS,CAACY,MAAM,CAAC,CAAC,CAC7B,CAAC,CAAE,CAACA,MAAM,CAAC,CAAC,CAEZ,mBACEV,IAAA,CAACN,aAAa,CAACyB,QAAQ,EAACC,KAAK,CAAE,CAAEN,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAE,CAAAT,QAAA,CAChDA,QAAQ,CACa,CAAC,CAE7B,CAAC,CAOD,cAAe,CAAAL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}